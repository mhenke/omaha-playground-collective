import { type NextPage } from "next";
import { useSession } from "next-auth/react";
import Head from "next/head";
import { useState } from "react";
import { Header } from "../components/Header";

import { Search } from "react-feather";
import { api, type RouterOutputs } from "../utils/api";

const Home: NextPage = (props) => {
  return (
    <>
      <Head>
        <title>Omaha Playground Collective</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />

      <Content />
    </>
  );
};

export default Home;

type Post = RouterOutputs["post"]["getAll"][0];

const Content: React.FC = () => {
  const { data: sessionData } = useSession();

  const [selectedPost, setSelectedPost] = useState<Post | null>(null);

  const { data: posts, refetch: refetchPosts } = api.post.getAll.useQuery(
    undefined, // no input
    {
      enabled: sessionData?.user !== undefined,
      onSuccess: (data) => {
        setSelectedPost(selectedPost ?? data[0] ?? null);
      },
    },
  );

  const createPost = api.post.create.useMutation({
    onSuccess: () => {
      refetchPosts();
    },
  });

  return (
    <section className="mx-5 mt-5 grid grid-cols-12 gap-2">
      <main className="col-span-8 grid grid-cols-8 items-center">
        <div className="col-span-4">
          <div className="relative rounded-md">
            <label htmlFor="search" className="sr-only">
              Search
            </label>
            <div className="flex items-center">
              <input
                type="text"
                name="search"
                id="search"
                className="w-full rounded-md border border-gray-300 py-2 pl-10 pr-3 focus:outline-none focus:ring focus:ring-gray-400"
                placeholder="Search..."
              />
              <div className="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3">
                <Search className="h-5 w-5 text-gray-400" />
              </div>
            </div>
          </div>
        </div>
        <div className="col-span-4 flex grid grid-cols-4 justify-around">
          <div className="col-span-1 ">
            <div className="flex justify-end">Topics:</div>
          </div>
          <div className="col-span-2 flex justify-around">
            <div className="flex items-center ">
              {Array.from({ length: 4 }).map((_, i) => (
                <div key={i} className="col-span-1">
                  Topic {i}
                </div>
              ))}
            </div>
          </div>
        </div>
      </main>

      <aside className="col-span-4 mt-4 md:col-span-2">
        Your aside content goes here (in the 4-column section)
      </aside>
      <div className="col-span-8">topics</div>
    </section>
  );
};
